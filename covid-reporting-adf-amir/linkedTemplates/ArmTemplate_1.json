{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "covid-reporting-adf-amir"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_hospital_weekly_daily')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_hospitalisation_Icu",
								"type": "DatasetReference"
							},
							"name": "SourceHosiptialisationIcu"
						},
						{
							"dataset": {
								"referenceName": "ds_country_lookup",
								"type": "DatasetReference"
							},
							"name": "SourceLookupCountry"
						},
						{
							"dataset": {
								"referenceName": "Ds_DimDate",
								"type": "DatasetReference"
							},
							"name": "sourceDimDate"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_weekly_hosptalisation",
								"type": "DatasetReference"
							},
							"name": "sinkweekly"
						},
						{
							"dataset": {
								"referenceName": "ds_hospital_Daily",
								"type": "DatasetReference"
							},
							"name": "sinkdaily"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "LookupCountry"
						},
						{
							"name": "Select2"
						},
						{
							"name": "splitDailyFromWeekly"
						},
						{
							"name": "DeriveecdYearWeek"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Pivotweek"
						},
						{
							"name": "PivotDaily"
						},
						{
							"name": "Sortweekly"
						},
						{
							"name": "Sortdaily"
						}
					],
					"script": "source(output(\n\t\tcountry as string,\n\t\tindicator as string,\n\t\tdate as date,\n\t\tyear_week as string,\n\t\tvalue as double,\n\t\tsource as string,\n\t\turl as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SourceHosiptialisationIcu\nsource(output(\n\t\tcountry as string,\n\t\tcountry_code_2_digit as string,\n\t\tcountry_code_3_digit as string,\n\t\tcontinent as string,\n\t\tpopulation as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SourceLookupCountry\nsource(output(\n\t\tdate_key as string,\n\t\tdate as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tday as string,\n\t\tday_name as string,\n\t\tday_of_year as string,\n\t\tweek_of_month as string,\n\t\tweek_of_year as string,\n\t\tmonth_name as string,\n\t\tyear_month as string,\n\t\tyear_week as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> sourceDimDate\nSourceHosiptialisationIcu select(mapColumn(\n\t\tcountry,\n\t\tindicator,\n\t\treported_date = date,\n\t\treported_year_week = year_week,\n\t\tvalue,\n\t\tsource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1, SourceLookupCountry lookup(Select1@country == SourceLookupCountry@country,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupCountry\nLookupCountry select(mapColumn(\n\t\tcountry = Select1@country,\n\t\tindicator,\n\t\treported_date,\n\t\treported_year_week,\n\t\tvalue,\n\t\tsource,\n\t\tcountry = SourceLookupCountry@country,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2 split(indicator =='Weekly new hospital admissions per 100k' || indicator=='Weekly new ICU admissions per 100k',\n\tdisjoint: false) ~> splitDailyFromWeekly@(Weekly, Daily)\nsourceDimDate derive(ecdc_year_week = year + '-W' + lpad(week_of_year,2,'0')) ~> DeriveecdYearWeek\nDeriveecdYearWeek aggregate(groupBy(ecdc_year_week),\n\tweek_start_date = min(date),\n\t\tweek_end_date = max(date)) ~> Aggregate1\nsplitDailyFromWeekly@Weekly, Aggregate1 join(reported_year_week == ecdc_year_week,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 pivot(groupBy(country,\n\t\treported_year_week,\n\t\treported_date,\n\t\tsource,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation,\n\t\tecdc_year_week,\n\t\tweek_start_date,\n\t\tweek_end_date),\n\tpivotBy(indicator, ['Weekly new hospital admissions per 100k', 'Weekly new ICU admissions per 100k']),\n\tcount = sum(value),\n\tcolumnNaming: '$V_$N',\n\tlateral: true) ~> Pivotweek\nsplitDailyFromWeekly@Daily pivot(groupBy(country,\n\t\treported_date,\n\t\treported_year_week,\n\t\tsource,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation),\n\tpivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),\n\tcount = sum(value),\n\tcolumnNaming: '$V_$N',\n\tlateral: true) ~> PivotDaily\nPivotweek sort(desc(reported_year_week, true),\n\tasc(country, true)) ~> Sortweekly\nPivotDaily sort(desc(reported_date, true),\n\tasc(country, true)) ~> Sortdaily\nSortweekly sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['hospital_admissions_weekly.csv'],\n\ttruncate: true,\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkweekly\nSortdaily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['hospital_admissions_daily.csv'],\n\ttruncate: true,\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkdaily"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_process_cases_and_deaths_Data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_cases_death",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"rawCaseDeath": {},
									"CountryLookup": {},
									"caseAndDeathsSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-04-26T14:44:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_process_hospital_weekly_daily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "data flow hospital",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_hospital_weekly_daily",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceHosiptialisationIcu": {},
									"SourceLookupCountry": {},
									"sourceDimDate": {},
									"sinkweekly": {},
									"sinkdaily": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-04-26T14:45:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_hospital_weekly_daily')]"
			]
		}
	]
}